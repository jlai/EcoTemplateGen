{{
    include "Shared/Utils"
    include "Shared/Eco"

    ItemClassName = BaseName + "Item"
    ObjectClassName = BaseName + "Object"
}}
// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from CraftingTable.scriban-cs />

namespace Eco.Mods.TechTree
{
    {{ include "Shared/DefaultNamespaces" }}

    [Serialized]
    [RequireComponent(typeof(OnOffComponent))]
    [RequireComponent(typeof(PropertyAuthComponent))]
    [RequireComponent(typeof(MinimapComponent))]
    [RequireComponent(typeof(LinkComponent))]
    [RequireComponent(typeof(CraftingComponent))]
    [RequireComponent(typeof(HousingComponent))]
    [RequireComponent(typeof(SolidAttachedSurfaceRequirementComponent))]
    [RequireComponent(typeof(PluginModulesComponent))]
    [RequireComponent(typeof(RoomRequirementsComponent))]
    [RequireRoomContainment]
    [RequireRoomVolume({{ this.RoomVolume ?? 25}})]
    [RequireRoomMaterialTier({{ this.RoomTier ?? 0.8 }}f)]
    public partial class {{ ObjectClassName }} : WorldObject, IRepresentsItem
    {
        public virtual Type RepresentedItemType => typeof({{ ItemClassName }});
        public override LocString DisplayName => Localizer.DoStr("{{ DisplayName }}");
        public override TableTextureMode TableTexture => TableTextureMode.Wood;

        protected override void Initialize()
        {
            this.ModsPreInitialize();
            this.GetComponent<MinimapComponent>().Initialize(Localizer.DoStr("Crafting"));
            this.GetComponent<HousingComponent>().HomeValue = {{ ItemClassName }}.homeValue;
            this.ModsPostInitialize();
        }

        public override void Destroy()
        {
            base.Destroy();
        }

        /// <summary>Hook for mods to customize WorldObject before initialization. You can change housing values here.</summary>
        partial void ModsPreInitialize();
        /// <summary>Hook for mods to customize WorldObject after initialization.</summary>
        partial void ModsPostInitialize();
    }

    [Serialized]
    [LocDisplayName("{{ DisplayName }}")]
    [Ecopedia("Work Stations", "Craft Tables", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]
    {{~ if this.AllowPluginModules ~}}
    {{~
        $allowedTags = this.AllowedPluginModuleTags ?? ["BasicUpgrade"] | array.join ", " @string.literal
        $allowedItems = this.AllowedPluginModuleItems ?? [] | array.join ", " @eco.typeof
    ~}}
    [AllowPluginModules(Tags = new string[] { {{ $allowedTags }} }, ItemTypes = new Type[] { {{ $allowedItems }} })] //noloc
    {{~ end ~}}
    public partial class {{ ItemClassName }} : WorldObjectItem<{{ ObjectClassName }}>, IPersistentData
    {
        
        public override LocString DisplayDescription => Localizer.DoStr("{{ this.DisplayDescription ?? "" }}");

        public override DirectionAxisFlags RequiresSurfaceOnSides { get;} = 0
                    | DirectionAxisFlags.Down
                ;
        public override HomeFurnishingValue HomeValue => homeValue;
        public static readonly HomeFurnishingValue homeValue = new HomeFurnishingValue()
        {
            Category                 = RoomCategory.Industrial,
            TypeForRoomLimit         = Localizer.DoStr(""),
        };

        [Serialized, SyncToView, TooltipChildren, NewTooltipChildren] public object PersistentData { get; set; }
    }

    {{~ if this.Recipe ~}}
    {{ include "Shared/RecipeClass" recipe: Recipe }}
    {{~ end ~}}
}
{{ end }}
